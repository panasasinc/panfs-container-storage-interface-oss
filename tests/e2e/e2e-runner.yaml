# Copyright 2025 VDURA Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-full-access
  namespace: e2e
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: tests
  namespace: e2e
spec:
  schedule: "0 2 * * *"              # Every day at 2:00 AM
  successfulJobsHistoryLimit: 15     # Keep last 51 successful Jobs
  failedJobsHistoryLimit: 25         # Keep last 25 failed Jobs
  concurrencyPolicy: Forbid          # Do not allow concurrent runs
  jobTemplate:
    spec:
      backoffLimit: 0                # Do not retry failed Jobs
      template:
        metadata:
          name: tests
        spec:
          serviceAccountName: sa-full-access
          restartPolicy: Never
          imagePullSecrets:
            - name: gcr-json-key
          containers:
            - name: main
              image: us-central1-docker.pkg.dev/labvirtualization/vdura-csi/panfs-csi-driver-test:stable
              imagePullPolicy: Always
              securityContext:
                privileged: true
                runAsUser: 0
              env:
                - name: KUBE_SSH_USER
                  value: root
              volumeMounts:
                - name: e2e-tests-cm
                  mountPath: /data
                - mountPath: /root/.ssh
                  name: root-ssh
                  readOnly: true
              command:
                - sh
                - -c
                - |
                  e2e.test \
                    -ginkgo.v \
                    -ginkgo.timeout=2h \
                    -ginkgo.focus='External.Storage' \
                    -ginkgo.skip='(ext3|ext4|xfs|ntfs|block volmode|snapshot|Pre-provisioned|topology|Feature:Windows)' \
                    -ginkgo.json-report='results.json' \
                    -storage.testdriver=/data/test-driver.yaml |
                  tee e2e-tests.log
                  e2e-tests-summary results.json e2e-tests.log
          volumes:
            - name: e2e-tests-cm
              configMap:
                name: e2e-tests-cm
            - name: root-ssh
              hostPath:
                path: /root/.ssh
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: e2e-tests-cm
  namespace: e2e
data:
  test-sc.yaml: |
    apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      name: csi-panfs-storage-class
    provisioner: com.vdura.csi.panfs
    allowVolumeExpansion: true
    reclaimPolicy: Delete
    parameters:
      csi.storage.k8s.io/controller-expand-secret-name: csi-panfs-storage-class
      csi.storage.k8s.io/controller-expand-secret-namespace: csi-panfs-storage-class
      csi.storage.k8s.io/node-publish-secret-name: csi-panfs-storage-class
      csi.storage.k8s.io/node-publish-secret-namespace: csi-panfs-storage-class
      csi.storage.k8s.io/provisioner-secret-name: csi-panfs-storage-class
      csi.storage.k8s.io/provisioner-secret-namespace: csi-panfs-storage-class
  test-driver.yaml: |
    StorageClass:
      FromName: false
      FromFile: /data/test-sc.yaml
    DriverInfo:
      Name: com.vdura.csi.panfs
      Capabilities:
        persistence: true
        block: false
        fsGroup: true
        selinux: true
        exec: true
        snapshotDataSource: false
        readWriteOncePod: true
        capReadOnlyMany: true
        pvcDataSource: false
        offlineExpansion: true
        onlineExpansion: true
        multipods: true
        RWX: true
        controllerExpansion: true
        nodeExpansion: false
        volumeLimits: false
        multiplePVsSameID: true
      SupportedMountOption:
        "": {"callback-quiet", "callback-verbose", "do-chunked-readahead", "add-hidden-attr-to-dot-files", "force-fm-readdir", "sync"}
      RequiredAccessModes:
        - ReadWriteMany
        - ReadWriteOnce
        - ReadOnlyMany
      SupportedSizeRange:
        Min: 1Mi
        Max: 1Gi
      SupportedFsType:
        "": {}
      StressTestOptions:
        NumPods: 10
        NumRestarts: 20
      PerformanceTestOptions:
        ProvisioningOptions:
          VolumeSize: 100Mi
          Count: 10
          ExpectedMetrics:
            AvgLatency: 1200000000000
            Throughput: 0.01
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sa-full-access-clusterrole
  namespace: e2e
rules:
- apiGroups:
    - ""
  resources:
    - "events"
    - "nodes"
    - "nodes/proxy"
    - "persistentvolumeclaims"
    - "persistentvolumes"
    - "pods"
    - "pods/ephemeralcontainers"
    - "pods/attach"
    - "pods/binding"
    - "pods/eviction"
    - "pods/portforward"
    - "pods/proxy"
    - "pods/exec"
    - "pods/status"
    - "replicationcontrollers"
    - "replicationcontrollers/scale"
    - "replicationcontrollers/status"
    - "services"
    - "namespaces"
    - "configmaps"
  verbs:
    - get
    - list
    - watch
    - create
    - delete
    - update
    - patch
- apiGroups:
    - "scheduling.k8s.io"
  resources:
    - "priorityclasses"
  verbs:
    - get
    - list
    - watch
    - create
    - delete
    - update
    - patch
- apiGroups:
    - ""
  resources:
    - "pods/log"
    - "serviceaccounts"
  verbs:
    - create
    - delete
    - get
    - list
    - watch
- apiGroups:
    - apps
  resources:
    - deployments
    - replicasets
    - daemonsets
    - statefulsets
  verbs:
    - get
    - list
    - watch
    - create
    - delete
    - patch
- apiGroups:
    - storage.k8s.io
  resources:
    - storageclasses
  verbs:
    - get
    - list
    - watch
    - create
    - patch
    - delete
- apiGroups:
    - rbac.authorization.k8s.io
  resources:
    - clusterrolebindings
    - clusterroles
  verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
- apiGroups:
    - apiextensions.k8s.io
  resources:
    - customresourcedefinitions
  verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
- apiGroups:
    - populator.storage.k8s.io
  resources:
    - volumepopulators
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
    - hello.example.com
  resources:
    - hellos
  verbs:
    - get
    - list
    - watch
    - create
    - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sa-full-access-binding
subjects:
- kind: ServiceAccount
  name: sa-full-access
  namespace: e2e
roleRef:
  kind: ClusterRole
  name: sa-full-access-clusterrole
  apiGroup: rbac.authorization.k8s.io