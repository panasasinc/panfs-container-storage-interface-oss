{{/* 
  # Copyright 2025 VDURA Inc.
  #
  # Licensed under the Apache License, Version 2.0 (the "License");
  # you may not use this file except in compliance with the License.
  # You may obtain a copy of the License at
  #
  #     http://www.apache.org/licenses/LICENSE-2.0
  #
  # Unless required by applicable law or agreed to in writing, software
  # distributed under the License is distributed on an "AS IS" BASIS,
  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  # See the License for the specific language governing permissions and
  # limitations under the License.
*/}}
# SPDX-License-Identifier: Apache-2.0
# Copyright 2025 VDURA Inc.

# ServiceAccount for the controller server
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Namespace }}-controller
  namespace: {{ .Release.Namespace }}
  labels:
    app: csi-panfs-controller
    product: com.vdura.csi.panfs
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
---
# SPDX-License-Identifier: Apache-2.0
# Copyright 2025 VDURA Inc.

# ClusterRole for the controller provisioner sidecar
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Namespace }}-controller-provisioner
  labels:
    app: csi-panfs-controller
    sidecar: provisioner
    product: com.vdura.csi.panfs
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
rules:
  # Allow managing PersistentVolumes for provisioning and deletion
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]

  # Allow managing PersistentVolumeClaims for binding and updating
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]

  # Allow reading StorageClasses for provisioning decisions
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]

  # Allow emitting and updating Events for resource operations
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]

  # Allow reading CSINodes for topology and node info
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]

  # Allow reading Nodes for topology-aware provisioning
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]

  # Allow reading VolumeAttachments for attach/detach operations
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch"]
---
# Namespace Role for reading secrets
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Namespace }}-controller-secret-reader
  namespace: {{ .Release.Namespace }}
  labels:
    app: csi-panfs-controller
    sidecar: secret-provisioner
    product: com.vdura.csi.panfs
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
rules:
  # Allow reading secrets for accessing PanFS realm credentials
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
---
# SPDX-License-Identifier: Apache-2.0
# Copyright 2025 VDURA Inc.

# Bind the secret reader Role to the controller ServiceAccount
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Namespace }}-controller-secret-reader-rolebinding
  namespace: {{ .Release.Namespace }}
  labels:
    app: csi-panfs-controller
    sidecar: secret-provisioner
    product: com.vdura.csi.panfs
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Namespace }}-controller
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ .Release.Namespace }}-controller-secret-reader
  apiGroup: rbac.authorization.k8s.io
---
# SPDX-License-Identifier: Apache-2.0
# Copyright 2025 VDURA Inc.

# Bind the provisioner ClusterRole to the controller ServiceAccount
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Namespace }}-controller-provisioner-rolebinding
  labels:
    app: csi-panfs-controller
    sidecar: provisioner
    product: com.vdura.csi.panfs
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Namespace }}-controller
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Namespace }}-controller-provisioner
  apiGroup: rbac.authorization.k8s.io
---
# SPDX-License-Identifier: Apache-2.0
# Copyright 2025 VDURA Inc.

# Namespace Role for leader election and storage capacity tracking
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Namespace }}-controller-provisioner
  namespace: {{ .Release.Namespace }}
  labels:
    app: csi-panfs-controller
    sidecar: provisioner
    product: com.vdura.csi.panfs
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
rules:
  # Allow leader election via leases
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]

  # Allow managing CSIStorageCapacity objects for storage capacity tracking
  - apiGroups: ["storage.k8s.io"]
    resources: ["csistoragecapacities"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # Allow reading pods for topology-aware provisioning
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get"]

  # Allow reading replicasets for topology-aware provisioning
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["get"]
---
# SPDX-License-Identifier: Apache-2.0
# Copyright 2025 VDURA Inc.

# Bind the namespace Role to the controller ServiceAccount
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Namespace }}-controller-provisioner-rolebinding
  namespace: {{ .Release.Namespace }}
  labels:
    app: csi-panfs-controller
    sidecar: provisioner
    product: com.vdura.csi.panfs
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Namespace }}-controller
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ .Release.Namespace }}-controller-provisioner
  apiGroup: rbac.authorization.k8s.io
---
# SPDX-License-Identifier: Apache-2.0
# Copyright 2025 VDURA Inc.

# ClusterRole for the attacher sidecar
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Namespace }}-controller-attacher
  labels:
    app: csi-panfs-controller
    sidecar: attacher
    product: com.vdura.csi.panfs
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
rules:
  # Allow patching PersistentVolumes for attach/detach operations
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "patch"]

  # Allow reading CSI node information
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]

  # Allow managing VolumeAttachments for attach/detach
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "patch"]

  # Allow updating status of VolumeAttachments
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
---
# SPDX-License-Identifier: Apache-2.0
# Copyright 2025 VDURA Inc.

# Bind the attacher ClusterRole to the controller ServiceAccount
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Namespace }}-controller-attacher-rolebinding
  labels:
    app: csi-panfs-controller
    sidecar: attacher
    product: com.vdura.csi.panfs
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Namespace }}-controller
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Namespace }}-controller-attacher
  apiGroup: rbac.authorization.k8s.io
---
# SPDX-License-Identifier: Apache-2.0
# Copyright 2025 VDURA Inc.

# Namespace Role for attacher leader election
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Namespace }}-controller-attacher
  namespace: {{ .Release.Namespace }}
  labels:
    app: csi-panfs-controller
    sidecar: attacher
    product: com.vdura.csi.panfs
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
rules:
  # Allow leader election via leases for attacher sidecar
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# SPDX-License-Identifier: Apache-2.0
# Copyright 2025 VDURA Inc.

# Bind the attacher Role to the controller ServiceAccount
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Namespace }}-controller-attacher-rolebinding
  namespace: {{ .Release.Namespace }}
  labels:
    app: csi-panfs-controller
    sidecar: attacher
    product: com.vdura.csi.panfs
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Namespace }}-controller
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ .Release.Namespace }}-controller-attacher
  apiGroup: rbac.authorization.k8s.io
---
# SPDX-License-Identifier: Apache-2.0
# Copyright 2025 VDURA Inc.

# ClusterRole for the resizer sidecar
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Namespace }}-controller-resizer
  labels:
    app: csi-panfs-controller
    sidecar: resizer
    product: com.vdura.csi.panfs
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
rules:
  # Allow patching PersistentVolumes for resizing
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "patch"]

  # Allow reading PersistentVolumeClaims for resizing
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]

  # Allow reading Pods for resizing operations
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]

  # Allow patching PersistentVolumeClaim status for resizing
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["patch"]

  # Allow managing Events related to resizing
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
---
# SPDX-License-Identifier: Apache-2.0
# Copyright 2025 VDURA Inc.

# Bind the resizer ClusterRole to the controller ServiceAccount
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Namespace }}-controller-resizer-rolebinding
  labels:
    app: csi-panfs-controller
    sidecar: resizer
    product: com.vdura.csi.panfs
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Namespace }}-controller
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Namespace }}-controller-resizer
  apiGroup: rbac.authorization.k8s.io