# Copyright 2025 VDURA Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Controller server configuration
controllerServer:
  # -- Number of controller replicas
  replicaCount: 3
  # -- Enable host networking for controller pods
  hostNetwork: true
  # -- Deployment strategy type
  # @default -- `{...}`
  strategy:
    type: RollingUpdate
    rollingUpdate:
      # Maximum number of unavailable pods during update
      maxUnavailable: 1
      # Maximum number of extra pods during update
      maxSurge: 1

  # -- Priority class for controller pods
  priorityClassName: system-cluster-critical

  # -- Affinity rules for controller pods
  # @default -- `{...}`
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - csi-panfs-controller
            topologyKey: "kubernetes.io/hostname"

  # -- PodDisruptionBudget for controller server
  podDisruptionBudget:
    # -- Minimum number of available pods for controller
    minAvailable: 1

  # CSI provisioner configuration
  provisioner:
    # -- CSI provisioner image
    image: k8s.gcr.io/sig-storage/csi-provisioner:v5.3.0
    # -- Image pull policy for provisioner
    pullPolicy: IfNotPresent
    # -- Log level for provisioner
    logLevel: 5
    # -- Timeout for provisioner operations
    timeout: 60s
    # -- Number of worker threads for provisioner
    workerThreads: 5
    # -- Retry interval start for provisioner
    retryIntervalStart: 5s

    # -- Resource requests and limits for provisioner
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        cpu: 300m
        memory: 300Mi

  # CSI attacher configuration
  attacher:
    # -- CSI attacher image
    image: k8s.gcr.io/sig-storage/csi-attacher:v4.9.0
    # -- Image pull policy for attacher
    pullPolicy: IfNotPresent
    # -- Log level for attacher
    logLevel: 5
    # -- Timeout for attacher operations
    timeout: 60s
    # -- Resource requests and limits for attacher
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        cpu: 200m
        memory: 200Mi

  # CSI resizer configuration
  resizer:
    # -- CSI resizer image
    image: gcr.io/k8s-staging-sig-storage/csi-resizer:v1.13.2
    # -- Image pull policy for resizer
    pullPolicy: IfNotPresent
    # -- Log level for resizer
    logLevel: 5
    # -- Timeout for resizer operations
    timeout: 60s
    # -- Resource requests and limits for resizer
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        cpu: 200m
        memory: 200Mi

  # -- Tolerations for controller pods
  # @default -- `[...]`
  tolerations: []
  # Allow scheduling on control-plane nodes
  # - key: "node-role.kubernetes.io/control-plane"
  #   operator: "Exists"
  #   effect: "NoSchedule"

  # Allow scheduling only if CriticalAddonsOnly toleration is present
  # - key: "CriticalAddonsOnly"
  #   operator: "Exists"

# Node server configuration
nodeServer:
  # -- Priority class for node pods
  priorityClassName: system-cluster-critical

  # CSI node driver registrar configuration
  driverRegistrar:
    # -- CSI node driver registrar image
    image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.5.0
    # -- Image pull policy for driver registrar
    pullPolicy: IfNotPresent
    # -- Log level for driver registrar
    logLevel: 5
    # -- Timeout for driver registrar operations
    timeout: 60s
    # -- Resource requests and limits for driver registrar
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        cpu: 100m
        memory: 100Mi

  # -- Node selector for node pods
  selector:
    node-role.kubernetes.io/worker: ""

  # -- Tolerations for node pods
  # @default -- `[...]`
  tolerations: 
  - operator: "Exists"

  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%

seLinux: true

# PanFS CSI plugin image and pull policy
panfsPlugin:
  # -- Image for the PanFS CSI plugin
  # @default -- `...`
  image: ghcr.io/panasasinc/panfs-container-storage-interface-oss/panfs-csi-driver:{{ .Chart.AppVersion }}
  
  # -- Image pull policy for the PanFS CSI plugin
  pullPolicy: Always
  
  # -- Log level for the PanFS CSI plugin
  logLevel: 5

  # -- Security options for the PanFS CSI plugin
  seLinuxOptions:
    user: system_u
    role: system_r
    type: container_t
    level: s0

  # -- Resource requests and limits for the PanFS CSI plugin
  resources:
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: 300m
      memory: 600Mi

dfcRelease:
  # -- Image pull policy for the DFC binary
  pullPolicy: Always

  # -- **PanFS DFC images** for different kernel versions
  # @default -- `[]`
  kernelMappings: []
    # - literal: worker-node-kernel-version-1
    #   image: panfs-dfc-kmm-image:<worker-node-kernel-version-1>-<dfc-release-version>
    # - literal: worker-node-kernel-version-2
    #   image: panfs-dfc-kmm-image:<worker-node-kernel-version-2>-<dfc-release-version>
    # - literal: worker-node-kernel-version-3
    #   image: panfs-dfc-kmm-image:<worker-node-kernel-version-3>-<dfc-release-version>

panfsKmmModule:
  # -- Enable or disable KMM module for PanFS
  enabled: true
  # -- Image pull policy for the KMM module
  pullPolicy: Always
  # -- Label applied to nodes when the PanFS kernel module is successfully loaded
  # @default -- `{"kmm.node.kubernetes.io/<csi-driver-namespace>.<module-name>.ready": ""}`
  kmmNodeReadyLabel:
    # Naming convention: kmm.node.kubernetes.io/<csi-driver-namespace>.<module-name>.ready
    name: kmm.node.kubernetes.io/{{ .Release.Namespace }}.panfs.ready 
    value: ""
  # -- Node selector for node pods
  selector:
    node-role.kubernetes.io/worker: ""

# labels -- Labels for the CSI driver workloads
labels: {}

# -- List of image pull secrets for private registries
imagePullSecrets: []

csiDriver:
  # -- Indicates if the driver requires NodePublishVolume to be periodically called for already published volumes
  requiresRepublish: false

  # -- Enables SELinux mount support for the CSI driver
  seLinuxMount: true

  # -- Specifies the policy for fsGroup handling
  fsGroupPolicy: File