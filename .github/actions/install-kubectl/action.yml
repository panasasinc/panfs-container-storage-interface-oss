# Copyright 2025 VDURA Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Install kubectl
description: Install kubectl in the GitHub Actions runner environment

inputs:
  version:
    description: What version of kubectl to install
    default: ""
    type: string

runs:
  using: 'composite'
  steps:
    - name: Install kubectl (auto-detect version)
      shell: bash
      run: |
        echo "::group::Installing kubectl"

        if kubectl version --client=true &> /dev/null; then
          echo "kubectl is already installed"
          kubectl version --client=true
          echo "::endgroup::"
          exit 0
        fi

        if [ -n "${{ inputs.version }}" ]; then
          echo "Installing specified kubectl version: ${{ inputs.version }}"
          curl -LO "https://dl.k8s.io/release/${{ inputs.version }}/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
          kubectl version --client=true
          echo "::endgroup::"
          exit 0
        fi
        
        APISERVER="https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}"
        TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
        CACERT=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt

        # Detect cluster version from API server
        K8S_VERSION=$(curl -s --cacert "$CACERT" --header "Authorization: Bearer $TOKEN" \
          "$APISERVER/version" | jq -r '.gitVersion' | sed 's/^v//')

        echo "Detected Kubernetes version: $K8S_VERSION"

        # Download matching kubectl version
        curl -LO "https://dl.k8s.io/release/v${K8S_VERSION}/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl

        # Show client & server versions
        kubectl version --client=true
        echo "::endgroup::"